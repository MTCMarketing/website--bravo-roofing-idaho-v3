{"version":3,"file":"component---src-pages-service-3-tsx-15c84e4c8302039d5640.js","mappings":"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","sources":["webpack:///./src/Components/RelatedServices.tsx","webpack:///./src/Components/ServiceGallery.tsx","webpack:///./src/Components/ServiceDetail.tsx","webpack:///./src/pages/service-3.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'gatsby';\nimport {\n  FiEye, FiMapPin, FiRefreshCw,\n  FiChevronLeft, FiChevronRight\n} from 'react-icons/fi';\nimport { servicesData, Service } from '../data/servicesData';\nimport '../Styles/ServiceCard.css';\n\ninterface RelatedServicesProps {\n  currentServiceId: number;\n}\n\ninterface ServiceCardProps {\n  service: Service;\n}\n\nconst ServiceCard: React.FC<ServiceCardProps> = ({ service }) => {\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isHovered, setIsHovered] = useState(false);\n\n  const nextImage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setCurrentImageIndex((prev) => \n      prev === service.images.length - 1 ? 0 : prev + 1\n    );\n  };\n\n  const prevImage = (e: React.MouseEvent) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setCurrentImageIndex((prev) => \n      prev === 0 ? service.images.length - 1 : prev - 1\n    );\n  };\n\n  return (\n    <Link to={`/service-${service.id}`} className=\"service-card-link\">\n      <div\n        className=\"service-card\"\n        onMouseEnter={() => setIsHovered(true)}\n        onMouseLeave={() => setIsHovered(false)}\n      >\n        <div className=\"image-container\">\n          <img \n            src={service.images[currentImageIndex].url} \n            alt={service.images[currentImageIndex].alt} \n            className=\"service-image\"\n          />\n          \n          <div className=\"service-tag\">{service.status_tag}</div>\n          \n          <div className={`image-overlay ${isHovered ? 'hidden' : ''}`}>\n            <div className=\"image-meta\">\n              <div className=\"location\">\n                <FiMapPin className=\"icon\" />\n                {service.location}\n              </div>\n              <div className=\"image-count\">\n                <FiEye className=\"icon\" />\n                {currentImageIndex + 1}/{service.images.length}\n              </div>\n            </div>\n          </div>\n\n          {service.images.length > 1 && (\n            <>\n              <button \n                className={`nav-arrow prev ${isHovered ? 'visible' : ''}`}\n                onClick={prevImage}\n                aria-label=\"Previous image\"\n              >\n                <FiChevronLeft />\n              </button>\n              <button \n                className={`nav-arrow next ${isHovered ? 'visible' : ''}`}\n                onClick={nextImage}\n                aria-label=\"Next image\"\n              >\n                <FiChevronRight />\n              </button>\n            </>\n          )}\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"card-header\">\n            <h3 className=\"service-title\">{service.title}</h3>\n            <div className=\"location-info\">\n              <FiMapPin className=\"location-icon\" />\n              <span className=\"location-text\">{service.location}</span>\n            </div>\n            <div className=\"price-info\">\n              <span className=\"price\">{service.price.value}</span>\n              <span className=\"frequency\">{service.price.frequency}</span>\n            </div>\n          </div>\n\n          <p className=\"service-description\">{service.description}</p>\n\n          <div className=\"features-list\">\n            {service.features.services.slice(0, 4).map((feature, index) => (\n              <div key={index} className=\"feature-item\">\n                <span className=\"feature-icon\">✓</span>\n                <span className=\"feature-text\">{feature}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className=\"service-footer\">\n            <div className=\"action-icons\">\n              <div className=\"cta-button\">\n                learn more\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Link>\n  );\n};\n\nconst RelatedServices: React.FC<RelatedServicesProps> = ({ currentServiceId }) => {\n  // Get 3 random services excluding the current one\n  const getRelatedServices = (): Service[] => {\n    const otherServices = servicesData.filter(service => service.id !== currentServiceId);\n\n    // Shuffle array and take first 3\n    const shuffled = [...otherServices].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, 3);\n  };\n\n  const relatedServices = getRelatedServices();\n\n  if (relatedServices.length === 0) {\n    return null;\n  }\n\n  return (\n    <section className=\"related-services-section\">\n      <div className=\"related-services-container\">\n        <div className=\"section-header\">\n          <h2>Other Services You Might Need</h2>\n          <p>Explore our complete range of professional roofing solutions</p>\n        </div>\n        \n        <div className=\"related-services-grid\">\n          {relatedServices.map(service => (\n            <ServiceCard key={service.id} service={service} />\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default RelatedServices;\n","import React, { useState } from 'react';\nimport { FiX, FiChevronLeft, FiChevronRight } from 'react-icons/fi';\nimport { getServiceById } from '../data/servicesData';\nimport '../Styles/ServiceGallery.css';\n\ninterface ServiceGalleryProps {\n  serviceId: number;\n}\n\nconst ServiceGallery: React.FC<ServiceGalleryProps> = ({ serviceId }) => {\n  const service = getServiceById(serviceId);\n  const [selectedImage, setSelectedImage] = useState<any>(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  if (!service || !service.images || service.images.length === 0) {\n    return null;\n  }\n\n  // Take only the first 3 images from the service\n  const galleryImages = service.images.slice(0, 3);\n\n  const openPreview = (image: any, index: number) => {\n    setSelectedImage(image);\n    setCurrentIndex(index);\n  };\n\n  const closePreview = () => {\n    setSelectedImage(null);\n  };\n\n  const goToPrevious = () => {\n    const newIndex = currentIndex === 0 ? galleryImages.length - 1 : currentIndex - 1;\n    setCurrentIndex(newIndex);\n    setSelectedImage(galleryImages[newIndex]);\n  };\n\n  const goToNext = () => {\n    const newIndex = currentIndex === galleryImages.length - 1 ? 0 : currentIndex + 1;\n    setCurrentIndex(newIndex);\n    setSelectedImage(galleryImages[newIndex]);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Escape') closePreview();\n    if (e.key === 'ArrowLeft') goToPrevious();\n    if (e.key === 'ArrowRight') goToNext();\n  };\n\n  return (\n    <section className=\"service-gallery-section\">\n      <div className=\"service-gallery-container\">\n        <div className=\"gallery-header\">\n          <div className=\"header-accent\"></div>\n          <h2>From Our Gallery</h2>\n          <p>See examples of our professional roofing work and quality craftsmanship</p>\n        </div>\n        \n        <div className=\"gallery-grid\">\n          {galleryImages.map((image, index) => (\n            <div\n              key={index}\n              className={`gallery-item ${index === 2 ? 'gallery-item-large' : ''}`}\n              onClick={() => openPreview(image, index)}\n            >\n              <div className=\"gallery-image-container\">\n                <img\n                  src={image.url}\n                  alt={image.alt}\n                  className=\"gallery-image\"\n                />\n                <div className=\"gallery-overlay\">\n                  <div className=\"view-icon\">\n                    <FiChevronRight />\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Preview Modal */}\n      {selectedImage && (\n        <div \n          className=\"gallery-modal\"\n          onClick={closePreview}\n          onKeyDown={handleKeyDown}\n          tabIndex={0}\n        >\n          <div className=\"modal-content\" onClick={(e) => e.stopPropagation()}>\n            <button className=\"modal-close\" onClick={closePreview}>\n              <FiX />\n            </button>\n            \n            <button className=\"modal-nav prev\" onClick={goToPrevious}>\n              <FiChevronLeft />\n            </button>\n            \n            <div className=\"modal-image-container\">\n              <img \n                src={selectedImage.url} \n                alt={selectedImage.alt}\n                className=\"modal-image\"\n              />\n              <div className=\"modal-info\">\n                <div className=\"modal-counter\">\n                  {currentIndex + 1} / {galleryImages.length}\n                </div>\n              </div>\n            </div>\n            \n            <button className=\"modal-nav next\" onClick={goToNext}>\n              <FiChevronRight />\n            </button>\n          </div>\n        </div>\n      )}\n    </section>\n  );\n};\n\nexport default ServiceGallery;\n","import React, { useState } from 'react';\nimport {\n  FiChevronLeft, FiChevronRight, FiX, FiMapPin,\n  FiCalendar, FiMessageCircle, FiMaximize2\n} from 'react-icons/fi';\nimport { getServiceById } from '../data/servicesData';\nimport RelatedServices from './RelatedServices';\nimport ServiceGallery from './ServiceGallery';\nimport '../Styles/ServiceDetail.css';\n\n// Testimonial data\nconst testimonials = [\n  {\n    id: 1,\n    text: \"Bravo Roofing finished our roof in two days. Perfect job.\",\n    author: \"Angela R., Boise\",\n    stars: 5\n  },\n  {\n    id: 2,\n    text: \"Crew showed up on time, cleaned up everything. Very professional.\",\n    author: \"Mike D., Meridian\",\n    stars: 5\n  },\n  {\n    id: 3,\n    text: \"Storm damage repair done the same day. Insurance approved it too!\",\n    author: \"Rachel T., Eagle ID\",\n    stars: 5\n  }\n];\n\n// TestimonialCarousel component\nconst TestimonialCarousel = ({ isPaused }: { isPaused: boolean }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  React.useEffect(() => {\n    if (isPaused) return;\n\n    const interval = setInterval(() => {\n      setCurrentIndex((prevIndex) =>\n        prevIndex === testimonials.length - 1 ? 0 : prevIndex + 1\n      );\n    }, 4000);\n\n    return () => clearInterval(interval);\n  }, [isPaused]);\n\n  const renderStars = (count: number) => {\n    return Array.from({ length: count }, (_, i) => (\n      <span key={i} className=\"star\">⭐</span>\n    ));\n  };\n\n  return (\n    <div className=\"testimonial-carousel\">\n      <div className=\"testimonial-content\">\n        <div className=\"testimonial-text\">\"{testimonials[currentIndex].text}\"</div>\n        <div className=\"testimonial-author\">{testimonials[currentIndex].author}</div>\n        <div className=\"testimonial-stars\">\n          {renderStars(testimonials[currentIndex].stars)}\n        </div>\n      </div>\n      <div className=\"testimonial-dots\">\n        {testimonials.map((_, index) => (\n          <button\n            key={index}\n            className={`dot ${index === currentIndex ? 'active' : ''}`}\n            onClick={() => setCurrentIndex(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\n// ContactForm component (extracted from hero.tsx)\nconst ContactForm = ({ onFocus, onBlur }: { onFocus: () => void; onBlur: () => void }) => {\n  const [formData, setFormData] = useState({\n    name: '',\n    phone: '',\n    email: '',\n    message: ''\n  });\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    console.log('Form submitted:', formData);\n    // Handle form submission here\n  };\n\n  return (\n    <div className=\"contact-form-container\">\n      <div className=\"form-header\">\n        <h3>Get Your Free Quote</h3>\n        <p>Professional roofing services in Boise, ID</p>\n      </div>\n      <form onSubmit={handleSubmit} className=\"contact-form\">\n        <div className=\"form-group\">\n          <input\n            type=\"text\"\n            name=\"name\"\n            placeholder=\"Your Name\"\n            value={formData.name}\n            onChange={handleInputChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"tel\"\n            name=\"phone\"\n            placeholder=\"Phone Number\"\n            value={formData.phone}\n            onChange={handleInputChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email Address\"\n            value={formData.email}\n            onChange={handleInputChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            required\n          />\n        </div>\n        <div className=\"form-group\">\n          <textarea\n            name=\"message\"\n            placeholder=\"Tell us about your roofing needs...\"\n            value={formData.message}\n            onChange={handleInputChange}\n            onFocus={onFocus}\n            onBlur={onBlur}\n            rows={4}\n          />\n        </div>\n        <button type=\"submit\" className=\"submit-button\">\n          Get My Free Quote\n        </button>\n      </form>\n    </div>\n  );\n};\n\ninterface ServiceDetailProps {\n  serviceId: number;\n}\n\nconst ServiceDetail: React.FC<ServiceDetailProps> = ({ serviceId }) => {\n  const service = getServiceById(serviceId);\n  const [currentImageIndex, setCurrentImageIndex] = useState(0);\n  const [isGalleryOpen, setIsGalleryOpen] = useState(false);\n  \n  if (!service) {\n    return <div>Service not found</div>;\n  }\n\n  const goToPrevImage = () => {\n    setCurrentImageIndex(prevIndex => \n      prevIndex === 0 ? service.images.length - 1 : prevIndex - 1\n    );\n  };\n\n  const goToNextImage = () => {\n    setCurrentImageIndex(prevIndex => \n      prevIndex === service.images.length - 1 ? 0 : prevIndex + 1\n    );\n  };\n\n  const openGallery = () => {\n    setIsGalleryOpen(true);\n  };\n\n  const closeGallery = () => {\n    setIsGalleryOpen(false);\n  };\n\n  return (\n    <div className=\"service-detail-container\">\n      {/* Hero Section with Image Gallery */}\n      <section className=\"service-hero\">\n        <div className=\"hero-image-gallery\">\n          <div className=\"main-image-container\">\n            <img \n              src={service.images[currentImageIndex].url}\n              alt={service.images[currentImageIndex].alt}\n              className=\"main-service-image\"\n              onClick={openGallery}\n            />\n            \n            {/* Navigation Arrows */}\n            <button className=\"gallery-arrow prev-arrow\" onClick={goToPrevImage}>\n              <FiChevronLeft />\n            </button>\n            <button className=\"gallery-arrow next-arrow\" onClick={goToNextImage}>\n              <FiChevronRight />\n            </button>\n            \n            {/* Expand Button */}\n            <button className=\"expand-gallery-btn\" onClick={openGallery}>\n              <FiMaximize2 />\n            </button>\n            \n            {/* Image Counter */}\n            <div className=\"image-counter\">\n              {currentImageIndex + 1} / {service.images.length}\n            </div>\n          </div>\n          \n          {/* Thumbnail Navigation */}\n          <div className=\"thumbnail-nav\">\n            {service.images.map((image, index) => (\n              <button\n                key={index}\n                className={`thumbnail ${index === currentImageIndex ? 'active' : ''}`}\n                onClick={() => setCurrentImageIndex(index)}\n              >\n                <img src={image.url} alt={image.alt} />\n              </button>\n            ))}\n          </div>\n        </div>\n      </section>\n\n      {/* Service Information Section */}\n      <section className=\"service-info-section\">\n        <div className=\"service-info-container\">\n          {/* Left Side - Service Details */}\n          <div className=\"service-details\">\n            {/* Tags and Meta */}\n            <div className=\"service-meta\">\n              <div className=\"service-tags\">\n                <span className=\"tag featured\">{service.featured_tag}</span>\n                <span className=\"tag status\">{service.status_tag}</span>\n              </div>\n              <div className=\"service-meta-info\">\n                <span className=\"meta-item\">\n                  <FiCalendar /> {service.date}\n                </span>\n                <span className=\"meta-item\">\n                  <FiMessageCircle /> {service.comments} Comments\n                </span>\n              </div>\n            </div>\n\n            {/* Service Title and Location */}\n            <h1 className=\"service-title\">{service.title}</h1>\n            <div className=\"service-location\">\n              <FiMapPin /> {service.location}\n            </div>\n\n            {/* Description */}\n            <div className=\"service-description\">\n              <h3>Description</h3>\n              <p>{service.fullDescription}</p>\n            </div>\n\n            {/* Facts and Features */}\n            <div className=\"service-facts\">\n              <h3>Facts and Features</h3>\n              <div className=\"facts-grid\">\n                {service.facts.map((fact, index) => (\n                  <div key={index} className=\"fact-item\">\n                    <div className=\"fact-icon\">{fact.icon}</div>\n                    <div className=\"fact-content\">\n                      <div className=\"fact-label\">{fact.label}</div>\n                      <div className=\"fact-value\">{fact.value}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n\n          {/* Right Side - Contact Form */}\n          <div className=\"service-contact-form\">\n            <div className=\"form-section\">\n              <TestimonialCarousel isPaused={false} />\n              <ContactForm\n                onFocus={() => {}}\n                onBlur={() => {}}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n\n\n      {/* Gallery Modal */}\n      {isGalleryOpen && (\n        <div className=\"gallery-modal\">\n          <div className=\"gallery-modal-content\">\n            <button className=\"close-gallery\" onClick={closeGallery}>\n              <FiX />\n            </button>\n            <div className=\"gallery-image-container\">\n              <img \n                src={service.images[currentImageIndex].url}\n                alt={service.images[currentImageIndex].alt}\n                className=\"gallery-modal-image\"\n              />\n              <button className=\"gallery-modal-arrow prev\" onClick={goToPrevImage}>\n                <FiChevronLeft />\n              </button>\n              <button className=\"gallery-modal-arrow next\" onClick={goToNextImage}>\n                <FiChevronRight />\n              </button>\n            </div>\n            <div className=\"gallery-modal-footer\">\n              <span>{currentImageIndex + 1} / {service.images.length}</span>\n              <span>{service.images[currentImageIndex].alt}</span>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Service Gallery Section */}\n      <ServiceGallery serviceId={serviceId} />\n\n      {/* Related Services Section */}\n      <RelatedServices currentServiceId={serviceId} />\n    </div>\n  );\n};\n\nexport default ServiceDetail;\n","import React from 'react';\nimport ServiceDetail from '../Components/ServiceDetail';\nimport Header from '../Components/header';\nimport Footer from '../Components/Footer';\n\n\nconst Service3Page: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <ServiceDetail serviceId={3} />\n    <Footer/>\n    </>\n  );\n};\n\nexport default Service3Page;\n"],"names":["ServiceCard","_ref","service","currentImageIndex","setCurrentImageIndex","useState","isHovered","setIsHovered","React","Link","to","id","className","onMouseEnter","onMouseLeave","src","images","url","alt","status_tag","FiMapPin","location","FiEye","length","onClick","e","preventDefault","stopPropagation","prev","FiChevronLeft","FiChevronRight","title","price","value","frequency","description","features","services","slice","map","feature","index","key","_ref2","currentServiceId","relatedServices","otherServices","servicesData","filter","_toConsumableArray","sort","Math","random","getRelatedServices","serviceId","getServiceById","selectedImage","setSelectedImage","currentIndex","setCurrentIndex","galleryImages","closePreview","goToPrevious","newIndex","goToNext","image","openPreview","onKeyDown","tabIndex","FiX","testimonials","text","author","stars","TestimonialCarousel","isPaused","interval","setInterval","prevIndex","clearInterval","count","Array","from","_","i","ContactForm","onFocus","onBlur","formData","setFormData","name","phone","email","message","handleInputChange","target","onSubmit","console","log","type","placeholder","onChange","required","rows","_ref3","isGalleryOpen","setIsGalleryOpen","goToPrevImage","goToNextImage","openGallery","FiMaximize2","featured_tag","FiCalendar","date","FiMessageCircle","comments","fullDescription","facts","fact","icon","label","ServiceGallery","RelatedServices","Header","ServiceDetail","Footer"],"sourceRoot":""}